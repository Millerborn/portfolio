{"version":3,"sources":["components/Projects/Projects.js","components/About/About.js","components/Home/Home.js","components/PortfolioPage/PortfolioBody.js","components/Header/Header.js","components/Footer/Footer.js","components/PortfolioPage/PortfolioPage.js","components/AdminView/AdminView.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["moment","require","Projects","react_default","a","createElement","className","this","props","projects","map","index","Card_default","id","key","CardMedia_default","src","thumbnail","alt","CardContent_default","date_completed","format","Typography_default","description","name","tag","Button_default","color","variant","href","website","target","rel","github","Component","connect","reduxState","About","Home","classes","img","compose","withStyles","theme","width","height","padding","Body","root","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","components_Home_Home","components_Projects_Projects","components_About_About","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fontFamily","margin","Header","header","Footer","Portfolio","getProjectList","dispatch","type","components_Header_Header","PortfolioBody","components_Footer_Footer","Admin","state","newProject","tag_id","handleChange","event","console","log","value","_this","setState","Object","objectSpread","defineProperty","onSubmit","preventDefault","payload","removeProject","handleOpen","open","handleClose","_this2","Link","to","FormControl_default","TextField_default","label","placeholder","onChange","multiline","InputLabelProps","shrink","Select_default","onClose","onOpen","inputProps","input","OutlinedInput_default","labelWidth","MenuItem_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","onClick","App","HashRouter","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootSaga","getProjects","addNewProject","deleteProject","sagaMiddleware","createSagaMiddleware","regenerator_default","wrap","_context","prev","next","takeEvery","stop","_marked","action","response","_context2","call","axios","get","sent","put","data","t0","_marked2","_context3","post","alert","_marked3","_context4","delete","concat","_marked4","storeInstance","createStore","combineReducers","arguments","length","undefined","tags","applyMiddleware","logger","run","ReactDOM","render","es","store","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eb40f4d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport '../PortfolioPage/PortfolioPage.css';\n\nconst moment = require('moment');\n\nclass Projects extends Component {\n\n  render() {\n    return (\n        <div className=\"projects-div\">\n            {this.props.projects.map( (projects, index) => {\n                return (\n                <Card className=\"project-content\" id=\"display\" key={index}>\n                    <CardMedia>\n                    <img id=\"img\" src={projects.thumbnail} alt=\"thumbnail\"/>\n                    </CardMedia>\n                    <CardContent id=\"card\">\n                        <div>{moment(projects.date_completed).format('LL')}</div>\n                    </CardContent>\n                        <Typography id=\"description\">{projects.description || '' }</Typography>\n                    <CardContent>\n                        <h2>{projects.name}</h2>\n                    </CardContent>\n                    <CardContent>\n                        <div>Made with {projects.tag}</div>\n                    </CardContent>\n                    <CardContent>\n                        <Button color=\"primary\" variant=\"contained\"><a className=\"project-link-button\" href={projects.website} target=\"_blank\" rel=\"noopener noreferrer\">Website</a></Button> <Button color=\"primary\" variant=\"contained\"><a className=\"project-link-button\" href={projects.github} target=\"_blank\" rel=\"noopener noreferrer\">Github</a></Button>\n                    </CardContent>\n                </Card>\n            )\n        })}\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n    projects: reduxState.projects,\n});\n\nexport default connect(mapStateToProps)(Projects);\n\n\n","import React, { Component } from 'react';\nimport '../PortfolioPage/PortfolioPage.css';\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <img className=\"link-image\" alt=\"\" src=\"/images/ireland-profile.jpg\"></img>\n                <p>I am a Junior Developer entering the Tech industry. \n                    My background comes from working in fast paced environments\n                    communicating with teammates to accomplish a mutual goal,\n                    give customers the best experience possible. I have a passion\n                    for giving people a unique and enjoyable experience.\n                    I want to translate that into the tech industry and work with new\n                    and talented people to make something incredible.    \n                </p>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../PortfolioPage/PortfolioPage';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    img: {\n      width: '150px',\n      height: '150px',\n      padding: '20px',\n    },\n  });\n\nclass Home extends Component {\n\n    render() {\n        const { classes } = this.props;   \n        return (\n            <div className=\"profile-images\">\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/Millerborn\">\n                    <img className={classes.img} alt=\"gitImage\" src=\"/images/github-image.jpeg\" /> \n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/cooper-miller-1ab28a68/\">\n                    <img className={classes.img} alt=\"linkedInImage\" src=\"/images/linkedin2.jpeg\" />\n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.instagram.com/thebarrellmaker/\">\n                    <img className={classes.img} alt=\"instagramImage\" src=\"/images/instagram.jpeg\" /> \n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://soundcloud.com/saggasays\">\n                    <img className={classes.img} alt=\"soundCloudImage\" src=\"/images/soundcloud.jpeg\" />\n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"/images/Resume (3).pdf\">\n                    <img className={classes.img} alt=\"soundCloudImage\" src=\"/images/resume-1.jpeg\" />\n                </a>\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"mailto:coopermllr@gmail.com\">\n                    <img className={classes.img} alt=\"soundCloudImage\" src=\"/images/gmail.jpeg\" />\n                </a>\n            </div>\n        );\n    }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Projects from '../Projects/Projects';\nimport About from '../About/About';\nimport Home from '../Home/Home';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(30),\n    fontWeight: theme.typography.fontWeightRegular,\n    fontFamily: 'oswald',\n    padding: '5px',\n    margin: '5px',\n  },\n});\n\n\nclass Body extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Links</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Home />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Projects</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Projects />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>About</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <About />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n        );\n    }\n}\n\nBody.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(Body);\n\n","import React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport './Header.css';\n\nconst styles = theme => ({\n    header: {\n        padding: 15,\n        fontFamily: 'Roboto',\n        color: 'black',\n        fontSize: '70px',\n    },\n});\n\nclass Header extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div id=\"hit-the-floor\" className={classes.header}>\n                <strong><p>Cooper Miller</p></strong>  \n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n    withStyles(styles)\n)(Header);","import React from 'react';\n\nconst Footer = () => (\n  <footer>\n    &copy; 2018\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './PortfolioPage.css';\nimport Body from './PortfolioBody';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nclass Portfolio extends Component {\n\n    componentDidMount() {\n        // Dispatch action to get projects\n        this.getProjectList();\n    }\n\n    getProjectList() {\n        this.props.dispatch( { type: 'GET_PROJECTS' } )\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Body />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(Portfolio);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './AdminView.css';\nimport { Link } from 'react-router-dom';\n\n\n// material-ui imports\n// import { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nclass Admin extends Component {\n\n    state = {\n        newProject: {\n            id: 4,\n            name: '',\n            description: '',\n            thumbnail: '',\n            website: '',\n            github: '',\n            date_completed: '',\n            tag_id: ''\n        }\n    }\n\n    // handle changes in the form inputs\n    handleChange = event => {\n        console.log('handleChange', event.target.value)\n        this.setState({\n            newProject: {\n                ...this.state.newProject,\n                [event.target.name]: event.target.value,\n            }\n        });\n    }\n\n    // submit project information from form\n    onSubmit = event => {\n        console.log('onSubmit event: ', this.state);\n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_PROJECTS', payload: this.state.newProject })\n        this.setState({\n            newProject: {\n                id: this.state.newProject.id + 1,\n                name: '',\n                description: '',\n                thumbnail: '',\n                website: '',\n                github: '',\n                date_completed: '',\n                tag_id: ''\n            }\n        });\n    }\n\n    // remove project\n    removeProject = (id) => {\n        console.log('In delete project function', id);\n        this.props.dispatch( { type: 'DELETE_PROJECT', payload: id } )\n    }\n\n    // display projects on page load\n    componentDidMount() {\n        // Dispatch action to request the projects from the API\n        this.getProjectList();\n    }\n\n    // get projects from index\n    getProjectList() {\n        this.props.dispatch( { type: 'GET_PROJECTS' } )\n    }\n\n    // handle open of drop down menu\n    handleOpen = () => {\n        this.setState({ open: true });\n      };\n    \n    // handle close of drop down menu\n    handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n        <div id=\"mainDiv\">\n            <Button id=\"projectButton\"><Link to=\"/\">Projects</Link></Button>\n            <div>\n                <h1>Admin</h1>\n            </div>\n            <br></br>\n            <h3>Add a new project</h3>\n                <form id=\"formInput\" onSubmit={this.onSubmit}>\n                    <FormControl id=\"formMenu\">\n                    <TextField type='text' label=\"name\" name=\"name\" placeholder=\"name\" margin=\"normal\" variant=\"outlined\"\n                        value={this.state.newProject.name} onChange={this.handleChange} />\n                    <TextField type='text' label=\"description\" placeholder=\"description\" multiline name=\"description\" margin=\"normal\" variant=\"outlined\" \n                        value={this.state.newProject.description} onChange={this.handleChange} />\n                    <TextField type='text' label=\"thumbnail\" name=\"thumbnail\" placeholder=\"thumbnail\" margin=\"normal\" variant=\"outlined\"\n                        value={this.state.newProject.thumbnail} onChange={this.handleChange} />\n                    <TextField type='url' label=\"website\" name=\"website\" placeholder=\"website\" margin=\"normal\" variant=\"outlined\"\n                        value={this.state.newProject.website} onChange={this.handleChange} />\n                    <TextField type='url' label=\"github\" name=\"github\" placeholder=\"github\" margin=\"normal\" variant=\"outlined\" \n                        value={this.state.newProject.github} onChange={this.handleChange} />\n                    <TextField id=\"date\" label=\"date\" type=\"date\" placeholder=\"date\" name=\"date_completed\" margin=\"normal\" variant=\"outlined\"\n                        value={this.state.newProject.date_completed} onChange={this.handleChange} \n                        InputLabelProps={{\n                            shrink: true,\n                          }}\n                    />\n                    <br></br>\n                    <Select\n                        variant=\"outlined\"\n                        label=\"technology\"\n                        placeholder=\"None\"\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        onOpen={this.handleOpen}\n                        value={this.state.newProject.tag_id}\n                        onChange={this.handleChange}\n                        inputProps={{ tag_id: '', }}\n                        name=\"tag_id\"\n                        input={\n                            <OutlinedInput\n                              labelWidth={0}\n                              name=\"technology\"\n                              id=\"tech-field\"\n                              label=\"technology\"\n                              placeholder=\"technology\"\n                            />\n                          }\n                    >\n                           <MenuItem value=''>\n                           <em>None</em>\n                           </MenuItem>\n                            <MenuItem value={1}>React</MenuItem> \n                            <MenuItem value={2}>jQuery</MenuItem> \n                            <MenuItem value={3}>Node</MenuItem> \n                            <MenuItem value={4}>SQL</MenuItem> \n                            <MenuItem value={5}>Redux</MenuItem> \n                            <MenuItem value={6}>HTML</MenuItem> \n                        </Select>\n                    </FormControl>\n                    <Button margin=\"normal\" variant=\"outlined\" type='submit'>\n                        Add New Project\n                    </Button>\n                </form>\n                        <Table id=\"projectTable\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.props.reduxState.projects.map( (projects, index) => {\n                                    return (\n                                        <TableRow key={index}>\n                                            <TableCell>{projects.name}</TableCell>\n                                            <TableCell><Button onClick={() => this.removeProject(projects.id) }>Delete</Button></TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n        </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Admin);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Portfolio from '../PortfolioPage/PortfolioPage';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Admin from '../AdminView/AdminView';\nclass App extends Component {\n  // Render the app on the DOM\n  render() {\n    return (\n      <Router>\n        <div id=\"AppDiv\">\n          <div id=\"navBar\">\n            <Route exact path=\"/\" component={Portfolio} />\n            <Route path=\"/admin\" component={Admin}/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n// Provider allows the use of redux within react app\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\n// Saga middleware\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport createSagaMiddleware from 'redux-saga';\nimport axios from 'axios';\n\n// Create sagaMiddleware\nconst sagaMiddleware = createSagaMiddleware();\n\n\n// Create the rootSaga generator function\nfunction* rootSaga() {\n    yield takeEvery('GET_PROJECTS', getProjects);\n    yield takeEvery('ADD_PROJECTS', addNewProject);\n    yield takeEvery('DELETE_PROJECT', deleteProject);\n    // yield takeEvery('ADD_TAG', addTag);\n}\n\n// get tags from database\n// function* getTags(action) {\n//     console.log('in getTags', action);\n//     try {\n//         const response = yield call(axios.get, '/projects');\n//         yield put( { type: 'SET_TAGS', payload: response.data } )\n//         console.log('getTags response data', response.data);\n//     }\n//     catch(error) {\n//         console.log('error in get tags generator', error);\n//     }\n// }\n\n// get projects from database\nfunction* getProjects(action) {\n    console.log('in getProjects', action);\n    try {\n        const response = yield call(axios.get, '/projects');\n        yield put( { type: 'SET_PROJECTS', payload: response.data } )\n        console.log('getProjects response data', response.data);\n    }\n    catch(error) {\n        console.log('error in get projects generator', error);\n    }\n}\n\n// add projects to database\nfunction* addNewProject(action) {\n    console.log('in add project generator', action);\n    try {\n      yield call( axios.post, '/projects', action.payload );\n      alert('Success adding a new Project.');\n      yield put( { type: 'GET_PROJECTS' } );\n    }\n    catch(error) {\n      console.log('error with add project', error);\n      alert('Error adding new Project. Please complete required fields.');\n    }\n  }\n\n// Delete project from the Database\nfunction* deleteProject(action) {\n    console.log('in delete project generator', action);\n    try {\n        yield call( axios.delete, `/projects/${action.payload}`);\n        yield put( { type: 'GET_PROJECTS' } );\n    }\n    catch(error) {\n        console.log('error with delete request', error);\n    }\n}\n\n// Used to store projects returned from the server\nconst projects = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_PROJECTS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n// Used to store the project tags (e.g. 'React', 'jQuery', 'Angular', 'Node.js')\nconst tags = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_TAGS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n// Create one store that all components can use\nconst storeInstance = createStore(\n    combineReducers({\n        projects,\n        tags,\n    }),\n    // Add sagaMiddleware to our store\n    applyMiddleware(\n        sagaMiddleware, \n        logger\n    ),\n);\n\n// Pass rootSaga into our sagaMiddleware\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, \n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}